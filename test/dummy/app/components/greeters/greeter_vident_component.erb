<%= root_element do |greeter| %>
  <%# HTML embellishment approach, most compatable with working with HTML in ERB %>
  <input type="text"
         <%= greeter.as_stimulus_targets(:name) %>
         class="shadow appearance-none border rounded py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline">
  <button <%= greeter.as_stimulus_actions([:click, :greet]) %>
          class="ml-4 whitespace-no-wrap bg-blue-500 hover:bg-blue-700 text-white font-bold py-2 px-4 rounded">
    <%= @cta %>
  </button>
  <span <%= greeter.as_stimulus_targets(:output) %> class="ml-4 text-xl text-gray-700"></span>

  <%# Alternative implementation: %>
  <%# The following options are "safer" as the previous is outputting directly into open HTML tags, eg better_html does not allow the above approach %>

  <%#= content_tag(:input, type: "text", class: "...", data: {**greeter.stimulus_target(:name)} %>
  <%#= content_tag(:button, @cta, class: "...", data: {**greeter.stimulus_action([:click, :greet])}) do %>
    <%#= @cta %>
  <%# end %>
  <%#= content_tag(:span, class: "...", data: {**greeter.stimulus_target(:output)}) %>

  <%# OR use the vident tag helper  %>

  <%#= greeter.tag(:input, stimulus_target: :name, type: "text", class: "...") %>
  <%#= greeter.tag(:button, stimulus_action: [:click, :greet], class: "...") do %>
    <%#= @cta %>
  <%# end %>
  <%#= greeter.tag(:span, stimulus_target: :output, class: "...") %>
<% end %>
